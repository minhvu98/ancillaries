package com.example.demo.entities;
// Generated Oct 21, 2019, 3:21:12 AM by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Credit generated by hbm2java
 */
@Entity
@Table(name = "credit", catalog = "projectsem_4")
public class Credit implements java.io.Serializable {

	private Integer id;
	private Account account;
	private Date created;
	private double amount;
	private Date dayTerm;

	public Credit() {
	}

	public Credit(Account account, Date created, double amount, Date dayTerm) {
		this.account = account;
		this.created = created;
		this.amount = amount;
		this.dayTerm = dayTerm;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "account_id", nullable = false)
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created", nullable = false, length = 10)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Column(name = "amount", nullable = false, precision = 22, scale = 0)
	public double getAmount() {
		return this.amount;
	}

	public void setAmount(double amount) {
		this.amount = amount;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "day_term", nullable = false, length = 10)
	public Date getDayTerm() {
		return this.dayTerm;
	}

	public void setDayTerm(Date dayTerm) {
		this.dayTerm = dayTerm;
	}

}
